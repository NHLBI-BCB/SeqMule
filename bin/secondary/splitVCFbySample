#!/usr/bin/env perl

use strict;
use warnings;

die "Usage: $0 <sample_name> <in.vcf> <out.vcf>\n" unless @ARGV==3;

my $sample=shift @ARGV;
my $in=shift @ARGV;
my $out=shift @ARGV;

open IN,'<',$in or die "Failed to read $in: $!\n";
open OUT,'>',$out or die "Failed to write to $out: $!\n";

my $col_wanted;
my $gtidx;
while (<IN>)
{
    next if (/^##/);
    if (/^#/)
    {
	chomp;
	my @f=split /\t/,$_;
	die "At least 10 columns expected in header: @f\n" unless @f>=10;
	#example header:CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	NA00001	NA00002	NA00003
	for my $i(9..$#f)
	{
	    if ($f[$i] eq $sample)
	    {
		die "Identical samples found in header: @f\n" if defined $col_wanted;
		$col_wanted=$i;
	    }
	}
	die "Failed to locate sample column: @f\n" unless defined $col_wanted;
    } else
    {
	#locate GT position
	chomp;
	my @f=split /\t/;
	my @format=split /:/,$f[8];

	for my $i(0..$#format)
	{
	    if ($format[$i] eq 'GT')
	    {
		die "Multiple GT fields found: @format\n" if defined $gtidx;
		$gtidx=$i;
	    }
	}
	last if defined $gtidx;
    }
}

die "GT missing. Cannot proceed.\n" unless defined $gtidx;

seek IN,0,0; #go back to start

while (<IN>)
{
    print OUT $_ and next if /^##/;

    chomp;
    my @f=split /\t/,$_;

    unless (/^#/)
    {
	my @format=split /:/,$f[$col_wanted];
	if ($format[$gtidx] =~ /([\d\.])([\/\|])([\d\.])/)
	{
	    my @obs=($1,$3);
	    my $separator=$2;
	    if ($obs[0] eq '.' && $obs[1] eq '.')
	    { #not a mutation
		next;
	    } elsif ($obs[0] eq '0' && $obs[1] eq '0')
	    { #not a mutation
		next;
	    } elsif ($obs[0] eq '.' || $obs[1] eq '.')
	    {
		die "One genotype missing: $format[$gtidx]\n";
	    } else
	    {
		#remove unused alt alleles, change GT accordingly
		my @alt=split /,/,$f[4];
		if ($obs[0] eq $obs[1])
		{
		    my $altidx=$obs[0]-1;
		    $f[4]=$alt[$altidx];
		    $format[$gtidx]=join($separator,"1");
		} elsif ($obs[0] eq '0' || $obs[1] eq '0')
		{
		    my $altidx=($obs[0] || $obs[1])-1;
		    $f[4]=$alt[$altidx];
		    if ($obs[0] eq '0')
		    { #in case this is phased data
			$format[$gtidx]=join($separator,"0","1");
		    } else
		    {
			$format[$gtidx]=join($separator,"1","0");
		    }
		} else
		{
		    my $altidx1=$obs[0]-1;
		    my $altidx2=$obs[1]-1;
		    $f[4]=join(",",$alt[$altidx1],$alt[$altidx2]);
		    $format[$gtidx]=join($separator,"1","2");
		}
		$f[$col_wanted]=join (":",@format);
	    }
	} else
	{
	    die "Inncorrect GT field (".($gtidx+1)."th) in @format\n";
	}
    }
    print OUT join "\t",@f[0..8];
    print OUT "\t",$f[$col_wanted],"\n";
}
close IN;
close OUT;
