#!/usr/bin/env perl

use strict;
use warnings;
use File::Spec;
use FindBin qw/$RealBin/;
use lib File::Spec->catdir($RealBin,"..","..","lib");
use SeqMule::Utils;
use Pod::Usage qw/pod2usage/;
use Getopt::Long qw/GetOptions/;

my ($help,
    $caller,
    $vcf,);
my @sample;

@ARGV or pod2usage ({-exitval=>2});
GetOptions(
    #input and output
    'caller=s'		=>	\$caller,
    'vcf=s'		=>	\$vcf,
    'sample=s'		=>	\@sample,
    #other
    'help|h'	        =>	\$help,
) or pod2usage({-exitval => 2});
$help and pod2usage ({-verbose=>1});

#determine whether it needs a header
my $lc;
if (-f $vcf && -s $vcf>0)
{
    $lc=`grep "#" $vcf | wc -l`;
    chomp $lc; 
} else
{
    $lc=0;
}
exit unless $lc == 0;

warn "WARNING: $caller did NOT generate VCF header, SeqMule tries to write one (not necessarily correct).\n";
my $header;

if ($caller eq 'varscan')
{
    $header=
    '##fileformat=VCFv4.1
##source=VarScan2
##INFO=<ID=ADP,Number=1,Type=Integer,Description="Average per-sample depth of bases with Phred score >= 15">
##INFO=<ID=WT,Number=1,Type=Integer,Description="Number of samples called reference (wild-type)">
##INFO=<ID=HET,Number=1,Type=Integer,Description="Number of samples called heterozygous-variant">
##INFO=<ID=HOM,Number=1,Type=Integer,Description="Number of samples called homozygous-variant">
##INFO=<ID=NC,Number=1,Type=Integer,Description="Number of samples not called">
##FILTER=<ID=str10,Description="Less than 10% or more than 90% of variant supporting reads on one strand">
##FILTER=<ID=indelError,Description="Likely artifact due to indel reads at this position">
##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">
##FORMAT=<ID=GQ,Number=1,Type=Integer,Description="Genotype Quality">
##FORMAT=<ID=SDP,Number=1,Type=Integer,Description="Raw Read Depth as reported by SAMtools">
##FORMAT=<ID=DP,Number=1,Type=Integer,Description="Quality Read Depth of bases with Phred score >= 15">
##FORMAT=<ID=RD,Number=1,Type=Integer,Description="Depth of reference-supporting bases (reads1)">
##FORMAT=<ID=AD,Number=1,Type=Integer,Description="Depth of variant-supporting bases (reads2)">
##FORMAT=<ID=FREQ,Number=1,Type=String,Description="Variant allele frequency">
##FORMAT=<ID=PVAL,Number=1,Type=String,Description="P-value from Fishers Exact Test">
##FORMAT=<ID=RBQ,Number=1,Type=Integer,Description="Average quality of reference-supporting bases (qual1)">
##FORMAT=<ID=ABQ,Number=1,Type=Integer,Description="Average quality of variant-supporting bases (qual2)">
##FORMAT=<ID=RDF,Number=1,Type=Integer,Description="Depth of reference-supporting bases on forward strand (reads1plus)">
##FORMAT=<ID=RDR,Number=1,Type=Integer,Description="Depth of reference-supporting bases on reverse strand (reads1minus)">
##FORMAT=<ID=ADF,Number=1,Type=Integer,Description="Depth of variant-supporting bases on forward strand (reads2plus)">
##FORMAT=<ID=ADR,Number=1,Type=Integer,Description="Depth of variant-supporting bases on reverse strand (reads2minus)">
#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT';
} elsif ($caller eq 'snver')
{
    $header=
    '##fileformat=VCFv4.0
##INFO=<ID=DP,Number=1,Type=Integer,Description="Total Depth">
##INFO=<ID=AC,Number=1,Type=Integer,Description="Alternative Allele Count">
##INFO=<ID=FS,Number=.,Type=Float,Description="Fisher Exact Pvalue">
##INFO=<ID=SP,Number=.,Type=Float,Description="Strand Bias Pvalue">
##INFO=<ID=PV,Number=.,Type=Float,Description="Pvalue generated by SNVer">
##FORMAT=<ID=AC1,Number=1,Type=Integer,Description="Alternative Allele Count Forward">
##FORMAT=<ID=AC2,Number=1,Type=Integer,Description="Alternative Allele Count Reverse">
##FORMAT=<ID=RC1,Number=1,Type=Integer,Description="Reference Allele Count Forward">
##FORMAT=<ID=RC2,Number=1,Type=Integer,Description="Reference Allele Count Reverse">
##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">
##FORMAT=<ID=PL,Number=1,Type=Float,Description="Phred Scaled Posterior Probablity of AA,AB,BB">
#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT';
} else
{
    die "ERROR: unable to add header for $caller.\n";
}

$header.="\t".join("\t",@sample);

my $out="$header\n";
$out.=`cat $vcf` if -f $vcf && -s $vcf>0; 
open OUT,'>',$vcf or die "Failed to add header to $vcf\n";
print OUT $out;
close OUT;

__END__


=head1 NAME

SeqMule an automatic pipeline for next-generation sequencing data analysis

=head1 SYNOPSIS

Options:

    #input and output
    'caller=s'		=>	\$caller,
    'vcf=s'		=>	\$vcf,
    'sample=s'		=>	\@sample,
    #other
    'help|h'	        =>	\$help,

=head1 OPTIONS

=over 8

=item B<--help>

Show detaild help.

=back

=head1 DESCRIPTION

SeqMule automatizes analysis of next-generation sequencing data by simplifying program installation, downloading of various databases, generation of analysis script, and customization of your pipeline.

=cut
