#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename qw/basename/;
use File::Spec;

my $ncpu=4;
my $mem="4.5g";
my $jmem="2500m";
my $gatknt=4;
my $exe="/home/yunfeiguo/projects/seqmule_parallel/bin/seqmule";
my $test_folder="/home/yunfeiguo/projects/data/test";
my $config_folder="/home/yunfeiguo/projects/seqmule_parallel/misc/predefined_config";
#for no merge, no ms
my $first_fq="part.1.fastq";
my $second_fq="part.2.fastq";
my $prefix="part";
#for merge
my @first_fq=("5181-2_S1-1_L001_R1_001.fastq","5181-2_S1_L001_R1_001.fastq");
my @second_fq=("5181-2_S1-1_L001_R2_001.fastq","5181-2_S1_L001_R2_001.fastq");
my $merge_prefix="R12";
my $merge_capture="/home/yunfeiguo/projects/data/test/merge_capture.bed";

my $basic; 
my $basic_merge;
my $basic_ms;
my @config_files=glob "$config_folder/*.config";

$basic="$exe pipeline -prefix $prefix -a $first_fq -b $second_fq -e -capture default -t $ncpu -jmem $jmem -gatknt $gatknt";
$basic_merge="$exe pipeline -merge --forceOneRG -rg colonRG -prefix $merge_prefix -a ".join(',',@first_fq)." -b ".join(',',@second_fq)." -e -t $ncpu -jmem $jmem -gatknt $gatknt -capture $merge_capture";
$basic_ms="$exe pipeline -a ".join(',',@first_fq,$first_fq)." -b ".join(',',@second_fq,$second_fq)." -rg colon1,colon2,part -capture default -e -t $ncpu -jmem $jmem -ms -prefix one,two,three -gatknt $gatknt";

#push @basic,"seqmule pipeline -bam chr1.bam,chr2.bam -e ";
#push @basic,"seqmule pipeline -bam chr1.bam,chr2.bam -e -ms ";
#push @basic,"seqmule pipeline -bam chr1.bam,chr2.bam -e -merge -p chr1-chr2-merge ";

chdir $test_folder or die "Can't enter $test_folder: $!\n";
my $count=0;

for my $q("","-quick")
{
    for my $j(@config_files)
    {
	for my $ms("","-ms","-merge")
	{
	    next if $ms eq '-ms';
		my @cmd;
		my @target_files;
		my $starting_point;
		my $job="n$count";
		my $tmp_dir=$job.basename($j)."-$q-$ms";

		$tmp_dir=~s/[\.\/]/_/g;
		$tmp_dir=~s/-+/-/g;
		$tmp_dir=~s/-$//g;

		push @cmd,"rm -rf $tmp_dir" if -d $tmp_dir;
		push @cmd,"mkdir $tmp_dir";
		push @cmd,"cd $tmp_dir";

		if ($ms eq '')
		{
		    @target_files=($first_fq,$second_fq);
		    $starting_point=$basic;

		} elsif ($ms eq '-merge')
		{
		    @target_files=(@first_fq,@second_fq);
		    $starting_point=$basic_merge;
		} elsif ($ms eq '-ms')
		{
		    $starting_point=$basic_ms;

		}

		for (@target_files)
		{
		    my $target=File::Spec->catfile($test_folder,$_);
		    push @cmd,"ln -sf $target .";
		}
		#push @cmd, "echo '$starting_point $q --advanced $j' | qsub -l h_vmem=$mem -V -cwd -pe smp $ncpu -N $job -m ea -M guoyunfei1989\@gmail.com";
		push @cmd, "$starting_point $q --advanced $j";
		push @cmd, "cd $test_folder";

		&exec(@cmd) if $count>=1 && $count<=1;
		$count++;
	}
    }
}


sub exec
{
    my @cmd=@_;
    my $tmp="/tmp/seqmule_test.$$".rand($$);
    open OUT,'>',$tmp or die "Can't open $tmp: $!\n";
    print OUT "#!/bin/sh\nset -e\n";
    print OUT join("\n",@cmd);
    close OUT;
    chmod 0755,$tmp;
    !system($tmp) or die "Failed to run $tmp\n";
}
