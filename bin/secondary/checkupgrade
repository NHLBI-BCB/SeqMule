#!/usr/bin/env perl

use strict;
use warnings;
use FindBin qw/$RealBin/;
use File::Spec;
use lib File::Spec->catdir($RealBin,"../../lib");
use SeqMule::Utils;

warn "Check for upgrade ...\n";
my $server="http://www.openbioinformatics.org/seqmule";
my $hostedCopy="http://www.openbioinformatics.org/seqmule/seqmule.latest.tar.gz";
my $localVersionFile=File::Spec->catfile($RealBin,"../../version");
my $webVersionFile="/tmp/$$".rand($$).".seqmuleversion.tmp";
&SeqMule::Utils::getstore("$server/version",$webVersionFile,["-q","-s"]);
if (-s $webVersionFile && -s $localVersionFile)
{
    my $localVersion=&readVersion($localVersionFile);
    my $webVersion=&readVersion($webVersionFile);

    if ($localVersion < $webVersion)
    {
	warn "-----------------------------UPDATE AVAILABLE---------------------------------\n";
	warn "------------------------------------------------------------------------------\n";
	warn "RECOMMEND: run 'seqmule update'\n";
	warn "ALTERNATIVE: download from '$hostedCopy' and unzip it to \n";
	warn "$RealBin\n";
	warn "to overwrite old stuff\n";
	warn "------------------------------------------------------------------------------\n";
	warn "------------------------------------------------------------------------------\n";
    } else
    {
	warn "NOTICE: This is the latest version!\n";
    }
    #cleanup
    unlink $webVersionFile;
} else
{
    warn "Downloading \'$localVersionFile\' from $server failed\n";
    warn "Bad Internet connection??\n";
    warn "NOTICE: version unknown\n";
}

#################SUBROUTINES#########################
sub readVersion
{
    my $file=shift;
    #first line is version, 2nd line is Git commit hash
    my $version=`head -n1 $file`;

    $version=~s/\D//g;

    return $version;
}
