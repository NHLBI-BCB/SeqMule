#!/usr/bin/env perl

use strict;
use warnings;
use File::Spec;
use File::Basename qw/basename dirname/;
use FindBin qw/$RealBin/;
use lib File::Spec->catdir($RealBin,"..","..","lib");
use SeqMule::Parallel;
use SeqMule::Utils;
use Pod::Usage qw/pod2usage/;
use Getopt::Long qw/GetOptions/;

my (
    $capture,   $java,    $java_mem,    $gatk,
    $ref,    $local_threads,    $gatk_nt, 
    $vcf, 
    $help,$advanced,    $n,);
my @bam;
@ARGV or pod2usage ({-exitval=>2});

GetOptions(
    #input and output
    'capture=s'		=>	\$capture,
    'java=s'		=>	\$java,
    'jmem=s'		=>	\$java_mem,
    'gatk=s'		=>	\$gatk,
    'ref=s'		=>	\$ref,
    'threads=i'		=>	\$local_threads,
    'gatk-nt=i'		=>	\$gatk_nt,
    'bam=s'		=>	\@bam, #specify it multiple times
    'vcf=s'		=>	\$vcf,
    'advanced=s'	=>	\$advanced,
    'n=i'		=>	\$n,
    #other
    'help|h'	        =>	\$help,
) or pod2usage({-exitval => 2});
$help and pod2usage ({-verbose=>1});

my @steps=&SeqMule::Utils::parsePipeline($advanced);
my %options=%{ $steps[$n-1][2] };

my $nt=&SeqMule::Utils::get_gatk_nt($local_threads,$gatk_nt);
my @cmd;

{
    my $cmd;
    $cmd.="$java -Xmx$java_mem -jar $gatk -T UnifiedGenotyper -R $ref -I ".join(' -I ',@bam)." ";

    $cmd.=" -nt $nt" if $nt > 1;

    $cmd.=" -o $vcf";
    $cmd.=" -L $capture" if $capture;
    $cmd.=" $options{UGadditional} " if $options{UGadditional} ne '';
    push @cmd,$cmd;
}

my $script=&SeqMule::Parallel::genTempScript(@cmd);
exec $script;

#------------------------------------------------------------



__END__


=head1 NAME

SeqMule an automatic pipeline for next-generation sequencing data analysis

=head1 SYNOPSIS

Options:

    #input and output
    'capture=s'		=>	\$capture,
    'java=s'		=>	\$java,
    'jmem=s'		=>	\$java_mem,
    'gatk=s'		=>	\$gatk,
    'ref=s'		=>	\$ref,
    'threads=i'		=>	\$local_threads,
    'gatk-nt=i'		=>	\$gatk_nt,
    'bam=s'		=>	\@bam, #specify it multiple times
    'vcf=s'		=>	\$vcf,
    'advanced=s'	=>	\$advanced,
    'n=i'		=>	\$n,
    #other
    'help|h'	        =>	\$help,

=head1 OPTIONS

=over 8

=item B<--help>

Show detaild help.

=back

=head1 DESCRIPTION

SeqMule automatizes analysis of next-generation sequencing data by simplifying program installation, downloading of various databases, generation of analysis script, and customization of your pipeline.

=cut
